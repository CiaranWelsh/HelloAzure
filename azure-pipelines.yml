# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    - master 
variables:
  SOURCE_DIR: '$(System.DefaultWorkingDirectory)'
  BUILD_DIR: '$(SOURCE_DIR)/build'
  INSTALL_DIR: '$(SOURCE_DIR)/install'

stages:
  - stage: Build 
    displayName: Build 
    pool: 
      vmImage: ubuntu-latest    
    jobs:
      - job: BuildLinux 
        strategy:
          matrix:
            Release:
              BUILD_TYPE: 'Release'
            Debug:
              BUILD_TYPE: 'Debug'
        steps:
          - script: | 
              echo "mkdir BUILD_DIR $(BUILD_DIR)"
              mkdir $(BUILD_DIR)
              echo "cd build directory "
              cd $(BUILD_DIR)
              echo " Run configure command"
              cmake -DCMAKE_INSTALL_PREFIX=$(INSTALL_DIR)/$(BUILD_TYPE) $(SOURCE_DIR)
              echo "running cmake build command"
              cmake --build . --target install --config $(BUILD_TYPE) -j 12 
          - task: CopyFiles@2
            inputs:
              contents: '$(SOURCE_DIR)/**'
              targetFolder: $(Build.ArtifactStagingDirectory)
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: HelloAzure-buildtree-$(BUILD_TYPE)
  - stage: BuildTests
    dependsOn: Build
    displayName: BuildTests 
    variables:
      ROOT: $(Pipeline.Workspace)/HelloAzure-buildtree-$(BUILD_TYPE)
    jobs: 
      - job: RunCTestLinux 
        strategy:
          matrix:
            Release:
              BUILD_TYPE: 'Release'
            Debug:
              BUILD_TYPE: 'Debug'
        steps: 
          - checkout: 'none'
          - download: current
            artifact: HelloAzure-buildtree-$(BUILD_TYPE)
          - script: |
              echo "Changing to Pipeline.Workspace: HelloAzure-buildtree-$(BUILD_TYPE) which is the same as root $(ROOT)"
              cd $(ROOT)
              echo "ROOT: $(ROOT)"
              echo "LS HERE: $(ls)"
              echo "LS root/build: $(ls build)"
              cd $(ROOT)/build
              ctest

        









